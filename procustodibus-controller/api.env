# procustodibus-api environment variables

# required for prod: canonical API hostname
# this should be a domain name covered by the $API_SSL_CERT
#API_CANONICAL_HOST={{ PROCUSTODIBUS_HOST }}

# optional: canonical API path if not mounted at webroot
API_CANONICAL_PATH=/api

# optional: canonical API port if different than listener port
API_CANONICAL_PORT=443

# required for TLS: "https"
API_CANONICAL_SCHEME=https

# required for load balancer: "true"
# otherwise omit or set to blank ("")
API_FORWARDED=true

# optional: API HTTP listener port; or "0" for no HTTP listener
#API_PORT=4000

# required for TLS: HTTPS listener port; or "0" for no HTTPS listener
#API_SSL_PORT=0

# required for TLS: path to PEM file to chain with TLS certificate
# (this may be the same as $API_SSL_CERT if the chain is included in the cert)
# eg: /etc/ssl/certs/procustodibus-issuer-chain.pem
#API_SSL_CA_CERT=

# required for TLS: path to PEM file containing TLS certificate
# to generate for dev: run `mix phx.gen.cert --output me/selfsigned`
# eg: /etc/ssl/certs/procustodibus-api.crt
#API_SSL_CERT=

# required for TLS: path to PEM file containing private key of TLS certificate
# eg: /etc/ssl/private/procustodibus-api.key
#API_SSL_KEY=

# required for TLS: path to dhparam file
# download this from https://ssl-config.mozilla.org/ffdhe2048.txt
# eg: /etc/ssl/dharam.pem
#API_SSL_DH_PARAM=

# required for prod: canonical root URL for app UI
#APP_URL=https://{{ PROCUSTODIBUS_HOST }}

# required to use AWS secrets manager (or AmazonSES adapter):
# either a) specify values for the AWS env vars below,
# or b) *delete* the AWS env vars below and make AWS access available
# to the host via an ~/.aws/config or credentials file
# (or via an EC2 instance profile or ECS task execution role)
AWS_DEFAULT_REGION=no
AWS_ACCESS_KEY_ID=no
AWS_SECRET_ACCESS_KEY=no
#AWS_SESSION_TOKEN=

# optional: Content-Security-Policy header content
#CSP_HEADER="default-src 'none'; form-action 'none'; base-uri 'none'; frame-ancestors 'none'; sandbox"

# optional: CORS wildcard domain allowlist for app UI
# (in addition to $CORS_ENDPOINTS)
# eg: example.com,example.org
#CORS_DOMAINS=

# optional: CORS endpoint allowlist for app UI
# (defaults to $APP_URL)
# eg: http://localhost:5173,http://10.1.2.3
#CORS_ENDPOINTS=

# required: source for application-level encryption key 1
# run `openssl rand -base64 32` to generate
# eg: "value:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
# eg: file:/etc/procustodibus/db_alek_1.txt
# eg: aws_secrets_manager:dev/db/alek/1
DB_ALEK_1={{ PROCUSTODIBUS_DB_ALEK_1 }}

# optional: active key number of application-level encryption key
#DB_ALEK_NUMBER=1

# required for prod: database name
DB_DATABASE=procustodibus_db

# required for prod: username for database
DB_USERNAME=procustodibus_user

# required for prod: password for database
DB_PASSWORD={{ PROCUSTODIBUS_DB_USER_PASSWORD }}

# required for prod: hostname of database
# this should be a domain name covered by the database's TLS certificate
# unless $DB_SSL_CA_CERT is blank
#DB_HOSTNAME=postgresql

# optional: hostname of database read-only replica
# this should be a domain name covered by the replica's TLS certificate
# unless $DB_SSL_CA_CERT is blank
# eg: db-readonly.procustodibus.example.com
#DB_READONLY=

# optional: database port
#DB_PORT=5432

# optional: database connection pool size
#DB_POOL_SIZE=10

# optional: source IP address of connection to database
#DB_SRC_IP=0.0.0.0

# required for TLS with the database: "true"
# otherwise omit or set to blank ("")
#DB_SSL=

# recommended for TLS with the database: path to PEM file containing
# the CA certificate that signed the database's TLS certificate
# eg: /etc/ssl/certs/rds-ca-bundle.pem
#DB_SSL_CA_CERT=

# optional: days (0=never) after which to delete old rows from big tables
#DB_PRUNE_DAYS_FOR_BIG_TABLES=0

# optional: list of Forwarded headers from which to parse original client IPs
# when API_FORWARDED=true
#FORWARDED_HEADERS=x-forwarded-for

# optional: list of Forwarded client IPs to ignore because they are known proxies
# in addition to the following special-use IP addresses:
# 127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,::1/128,fc00::/7
#FORWARDED_PROXIES=

# optional: list of Forwarded client IPs to accept even if they are in the
# above special-use IP addresses list for FORWARDED_PROXIES
# eg: 10.10.1.0/24,10.10.2.0/24,10.10.3.0/24
#FORWARDED_CLIENTS=

# optional: source IP address of webhook requests
#HOOKS_SRC_IP=0.0.0.0

# optional: add Strict-Transport-Security header with max-age (eg "90 days")
#HSTS_MAX_AGE=

# recommended: "en_US.utf8" to avoid character-encoding issues
LANG=en_US.utf8

# optional: source IP address of LDAP connections
#LDAP_SRC_IP=0.0.0.0

# optional: directory for license files
#LICENSE_DIR=/etc/procustodibus/license

# optional: blank ("") to turn of all background jobs
#JOBS=all

# optional: allow users to log in on the general log-in page by email address
# or other contact methods for which they've enabled the "login" use
#LOGIN_WITH_CONTACT_INFO=false

# optional: "syslog" for better syslog integration
#LOG_BACKEND=

# optional: debug, info, notice, warning, error, critical, alert, or emergency
#LOG_LEVEL=info

# optional: "AmazonSES", or blank for standand SMTP relay
#MAIL_ADAPTER=

# optional: display name for alert emails
# (defaults to $MAIL_FROM_NAME)
#MAIL_ALERTS_FROM_NAME=

# optional: address from which to send alert emails
# (defaults to $MAIL_FROM_ADDRESS)
#MAIL_ALERTS_FROM_ADDRESS=

# optional: default display name for emails
#MAIL_FROM_NAME="Pro Custodibus"

# required for prod: default address from which to send emails
MAIL_FROM_ADDRESS=procustodibus@ru2.vpn.akinfold.com

# optional: address to which to send emails about operational issues with API
# (defaults to $MAIL_FROM_ADDRESS)
#MAIL_OPS_TO=

# required for prod: hostname of mail relay
MAIL_RELAY=smtp.akinfold.com

# optional: port at which to connect to mail relay
#MAIL_PORT=25

# optional: always, if_available, never
#MAIL_AUTH=if_available

# optional: username for authentication with mail relay
#MAIL_USERNAME=

# optional: password for authentication with mail relay
#MAIL_PASSWORD=

# optional: set to "false" if mail relay has problems with TLS 1.3 Middlebox
# Compatibility Mode (such as AWS SES)
#MAIL_MIDDLEBOX_COMPATIBILITY_MODE=true

# optional: hostname to present to mail relay (if not `hostname --fqdn`)
# eg: api.procustodibus.example.com
#MAIL_MYHOSTNAME=

# optional: source IP address of connection to mail relay
#MAIL_MYIP=0.0.0.0

# required for TLS with the mail relay: "true"
# otherwise omit or set to blank ("")
#MAIL_SSL=

# recommended for TLS with the mail relay: path to PEM file containing
# the CA certificate that signed the relay's TLS certificate
# eg: /etc/ssl/certs/ca-certificates.crt
#MAIL_SSL_CA_CERT=

# optional: always, if_available, never
#MAIL_STARTTLS=if_available

# required for u2f if api has different hostname than app: root domain name
# eg if api hostname is "api.example.com" and app hostname is "app.example.com"
# then the root domain name is "example.com"
#ROOT_DOMAIN=

# required to create new organization at $APP_URL/signup
# run `openssl rand -base64 6` to generate
# eg: AAAAAAAA
SIGNUP_KEY={{ PROCUSTODIBUS_SIGNUP_KEY }}

# required for prod: "prod"
SITE=prod

# required for twilio: twilio account SID
# eg: AC34567890abdcef1234567890abdcef
#TWILIO_ACCOUNT_SID=

# required for twilio: twilio authentication token
# eg: 1234567890abdcef1234567890abdcef
#TWILIO_AUTH_TOKEN=

# required for twilio: number from which to send SMS messages
# eg: +15005550001
#TWILIO_FROM_NUMBER=

# optional for twilio: max price of SMS message in US dollars
#TWILIO_MAX_PRICE=0.01

# optional for twilio: callback URL for SMS messages
# eg: https://$API_CANONICAL_HOST/webhooks/twilio/sms/status_callback
#TWILIO_STATUS_CALLBACK=

# optional: blank ("") to turn of all listeners (ie run background-jobs only)
#WORKERS=all
