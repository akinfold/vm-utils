services:
  # Traefik 3 - Reverse Proxy
  # Source: https://www.simplehomelab.com/udms-18-traefik-docker-compose-guide/
  traefik:
    container_name: traefik
    image: traefik:3.5
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      t3_proxy:
        ipv4_address: 192.168.90.254 # Specify a static IP
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http3=true
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      # Trefik dashboard configuration.
      # Source: https://doc.traefik.io/traefik/operations/dashboard/
      - --api=true
      - --api.dashboard=true
      - --api.basePath=/traefik

      # Disable SSL certificate verification when Traefik communicates with backend services.
      - --serversTransport.insecureSkipVerify=true

      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      # - --accessLog.filters.statusCodes=204-299,400-499,500-599 # Only logs responses with these status codes, filtering out routine successful requests (200-203) and redirects (300-399) to reduce log noise

      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock # Disable for Socket Proxy. Enable otherwise.
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=t3_proxy
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      - --providers.file.watch=true # Only works on top level files in the rules folder

      # Create letsencrypt certificate resolver
      - --certificatesResolvers.letsencrypt.acme.email=akinfold@gmail.com
      - --certificatesResolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesResolvers.letsencrypt.acme.httpChallenge.entrypoint=web3
      - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing

      # Apply letsencrypt certificate resolver to websecure entrypoint and specify hostname for certificate.
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.options=tls-opts@file
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=$TRAEFIK_HOSTNAME

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKER_APPDATA_PATH/traefik3/rules:/rules
      - $DOCKER_APPDATA_PATH/traefik3/acme/acme.json:/acme.json
      - $DOCKER_LOGS_PATH/traefik3:/logs
    environment:
      - TZ
      - TRAEFIK_HOSTNAME # Passing the domain name to traefik container to be able to use the variable in rules. 
    secrets:
      - basic_auth_credentials
    labels:
      - "traefik.enable=true"
      # Configure Traefik Dashboard to be available at https://FQDN/traefik
      # HTTP Routers
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.rule=Host(`$TRAEFIK_HOSTNAME`) && PathPrefix(`/traefik`)"
      # Services - API
      - "traefik.http.routers.dashboard.service=api@internal"
      # Middlewares
      - "traefik.http.routers.dashboard.middlewares=chain-basic-auth@file"
